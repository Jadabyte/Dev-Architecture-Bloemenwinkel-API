// <auto-generated />
using System;
using FlowerStoreAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlowerStoreAPI.Migrations
{
    [DbContext(typeof(FlowerStoreContext))]
    [Migration("20210108141653_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FlowerStoreAPI.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ABC Street 1, Antwerp",
                            Email = "john.swan@example.com",
                            FirstName = "John",
                            LastName = "Swan",
                            Password = "JohnSwan123"
                        },
                        new
                        {
                            Id = 2,
                            Address = "DEF Street 2, Ghent",
                            Email = "jack.shoveler@example.com",
                            FirstName = "Jack",
                            LastName = "Shoveler",
                            Password = "Js!123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "GHI Street 3, Brussels",
                            Email = "jason.sparrow@example.com",
                            FirstName = "Jason",
                            LastName = "Sparrow",
                            Password = "SparrowIsMyName456"
                        },
                        new
                        {
                            Id = 4,
                            Address = "JKL Street 4, Bruges",
                            Email = "justin.starling@example.com",
                            FirstName = "Justin",
                            LastName = "Starling",
                            Password = "JustinWho?13"
                        },
                        new
                        {
                            Id = 5,
                            Address = "MNO Street 5, Ostend",
                            Email = "joseph.swift@example.com",
                            FirstName = "Joseph",
                            LastName = "Swift",
                            Password = "EasyPassword$9"
                        });
                });

            modelBuilder.Entity("FlowerStoreAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 3,
                            Date = new DateTime(2020, 10, 18, 9, 30, 28, 0, DateTimeKind.Unspecified),
                            ProductId = 5,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 1,
                            Date = new DateTime(2020, 10, 18, 10, 15, 33, 0, DateTimeKind.Unspecified),
                            ProductId = 4,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2,
                            Date = new DateTime(2020, 10, 18, 11, 58, 12, 0, DateTimeKind.Unspecified),
                            ProductId = 3,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 5,
                            Date = new DateTime(2020, 10, 21, 9, 45, 46, 0, DateTimeKind.Unspecified),
                            ProductId = 1,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 4,
                            Date = new DateTime(2020, 10, 21, 10, 2, 13, 0, DateTimeKind.Unspecified),
                            ProductId = 2,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("FlowerStoreAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Flowering plant",
                            Name = "Rose",
                            Price = 4.50m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Spring-blooming",
                            Name = "Tulip",
                            Price = 2.50m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Flowering plant",
                            Name = "Orchid",
                            Price = 2.50m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Flowering plant",
                            Name = "Iris",
                            Price = 1.50m
                        },
                        new
                        {
                            Id = 5,
                            Category = "Flowering plant",
                            Name = "Sunflower",
                            Price = 3.50m
                        });
                });

            modelBuilder.Entity("FlowerStoreAPI.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Brussels",
                            Email = "brussels@flowerstore.com",
                            Number = "12",
                            Phone = "02 123 456",
                            Street = "Nieuwstraat"
                        },
                        new
                        {
                            Id = 2,
                            City = "Antwerp",
                            Email = "antwerp@flowerstore.com",
                            Number = "130",
                            Phone = "03 123 456",
                            Street = "Meir"
                        },
                        new
                        {
                            Id = 3,
                            City = "Ghent",
                            Email = "ghent@flowerstore.com",
                            Number = "28",
                            Phone = "09 123 456",
                            Street = "Veldstraat"
                        });
                });

            modelBuilder.Entity("FlowerStoreAPI.Models.Order", b =>
                {
                    b.HasOne("FlowerStoreAPI.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerStoreAPI.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerStoreAPI.Models.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
